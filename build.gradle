buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
        kotlinVersion = '1.2.20'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")

    }
}

plugins {
    id 'net.ltgt.apt' version '0.10'
    id 'com.avast.gradle.docker-compose' version "0.7.1"
    id "com.palantir.docker" version "0.19.2"

}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = 'Finchley.M8'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')

    compileOnly 'org.projectlombok:lombok:1.16.20'
    apt "org.projectlombok:lombok:1.16.20"
//  <groupId>javax.servlet.jsp.jstl</groupId>
//      <artifactId>javax.servlet.jsp.jstl-api</artifactId>
//      <version>1.2.1</version>
    implementation('javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1')
    implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
    implementation('org.springframework.cloud:spring-cloud-stream-reactive')
    testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')

    implementation("com.h2database:h2")
    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    implementation("org.springframework.boot:spring-boot-starter-actuator")

    // logging
    implementation('ch.qos.logback:logback-classic')
    implementation('org.slf4j:jul-to-slf4j')
    implementation('org.slf4j:log4j-over-slf4j')


}

kapt {
    useBuildCache = true
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}


docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

dockerCompose {
    // settings as usual
    dep {
        useComposeFiles = ['docker/docker-compose-dependencies.yaml']
        isRequiredBy(project.tasks.bootRun)
    }

    myapp {
        useComposeFiles = ['docker/docker-compose-dependencies.yaml', 'docker/docker-compose-myApp.yaml']
    }
}


